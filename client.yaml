apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: lp-demo
  title: lp-demo
  description: api-demo
spec:
  owner: DCP
  type: service
  parameters:
    - title: Fill in the repo details
      properties:
        test:
          type: string
          ui:field: SelectFieldFromApi
          ui:options:
            placeholder: Select-env
            path: catalog/entities
            valueSelector: metadata.uid
            allowArbitraryValues: false
        uid:
         type: string
         ui:field: SelectFieldFromApi
         ui:options:
           placeholder: SELECT-UID
           path: catalog/entities
           valueSelector: metadata.uid
           labelSelector: metadata.name
           allowArbitraryValues: false    
           setContextData:
             component_name: metadata.name
             component_uid: metadata.uid 
             component_title: metadata.title   
             metadata: metadata
        detail2:
         type: string
         ui:field: SelectFieldFromApi
         ui:options:
           placeholder: Select titles
           path: catalog/entities?filter=metadata.uid={{parameters.uid}}
           valueSelector: metadata.name      
           allowArbitraryValues: false     
           setContextData:
             component_name2: metadata.name
             component_uid2: metadata.uid 
             component_title2: metadata.title     
        detail3:
         type: string
         ui:field: SelectFieldFromApi
         ui:options:
           placeholder: Select titles
           path: catalog/entities/by-uid/{{parameters.uid}}
           valueSelector: metadata.name
           allowArbitraryValues: false
           setContextData:
             component_name3: metadata.name
             component_uid3: metadata.uid 
             component_title3: metadata.title                        
        formContext:
          title: Live Form Context
          description: DEBUG Context
          type: string
          ui:field: ContextViewer
          ui:options:
            getContextData: {{formContext}}             

  steps:
    - id: trigger
      name: Onboarding a New GitHub Repository
      action: trigger:harness-custom-pipeline
      input:
        url: https://app.harness.io/ng/account/278oQOylSUWVALR6dOgnhg/module/ci/orgs/default/projects/DirectTVDemo/pipelines/GitHub_Repository_Onboarding_Clone_Clone/pipeline-studio?storeType=INLINE
        inputset:
          aws_account: ${{ parameters.aws_account }}
        apikey: ${{ parameters.token }}
        showOutputVariables: true
  output:
    links:
      - title: Pipeline Details
        url: ${{ steps.trigger.output.PipelineUrl }}
    text:
      - title: Outputs
        content: |
          return: ${{steps.trigger.output.RETURN_VAL}},github_org_name: ${{ parameters.github_org_name}},github_repo_name: ${{ parameters.github_repo_name}}




          
